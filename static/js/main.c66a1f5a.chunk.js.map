{"version":3,"sources":["components/ImageBox.js","App.js","index.js"],"names":["ImageBox","props","className","onClick","data-value","value","src","alt","App","state","startCounter","currentCounter","selected","imgClick","e","makePics","i","pics","counter","dollarValue","console","log","target","getAttribute","Number","newState","newCounter","classList","contains","filter","img","alert","toggle","setState","make","this","map","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAaeA,EAXE,SAACC,GACd,OACI,yBACAC,UAAU,mBACVC,QAASF,EAAME,SAEX,yBAAKC,aAAYH,EAAMI,MAAOC,IAAKL,EAAMK,IAAKC,IAAKN,EAAMM,KAAO,OCLvDC,E,kDACnB,WAAaP,GAAQ,IAAD,8BAClB,cAAMA,IACDQ,MAAQ,CACXC,aAAc,GACdC,eAAgB,GAChBC,SAAU,IAEZ,EAAKC,SAAW,SAACC,KAGjB,EAAKC,SAAW,WAiDd,OA/Ca,WAOX,IANF,IACIC,EAAI,EACJC,EAAO,GACPC,EAAU,EACVC,EAAc,EAERH,EANS,GAMOA,IACtBC,EAAI,sBAAOA,GAAP,CAAa,kBAAC,EAAD,CACff,UAAW,EAAKO,MAAME,eAAiBQ,EAAc,UAAY,GACjEd,MAAOc,EACPb,IAAG,qBAAgBU,EAAhB,QACHb,QAAS,SAAAW,GACPM,QAAQC,IAAIP,EAAEQ,OAAOC,aAAa,eAClC,IAAMlB,EAAQmB,OAAOV,EAAEQ,OAAOC,aAAa,eACvCE,EAAQ,eAAO,EAAKhB,OACpBG,EAAWa,EAASb,SAEpBc,EAAaD,EAASd,eAC1B,GAAGG,EAAEQ,OAAOK,UAAUC,SAAS,WAC7BF,GAA0BrB,EAC1BoB,EAASb,SAAWA,EAASiB,QAAO,SAAAC,GAAG,OAAIA,IAAQhB,EAAEQ,OAAOhB,WAE1D,CACF,GAAGoB,EAAarB,EAAQ,EAEtB,YADA0B,MAAM,wBAGRL,GAA0BrB,EAC1BoB,EAASb,SAAT,sBAAwBA,GAAxB,CAAkCE,EAAEQ,OAAOhB,MAE7CmB,EAASd,eAAiBe,EAC1BN,QAAQC,IAAI,cACZD,QAAQC,IAAIK,GAEZZ,EAAEQ,OAAOK,UAAUK,OAAO,WAC1B,EAAKC,SAASR,QAIH,KADfP,GAAS,KAEPA,EAAU,EACVC,GAAe,GAGnB,OAAOF,EAEFiB,IA3DS,E,qDAiElB,OACE,kBAAC,WAAD,KACE,yBAAKhC,UAAU,mBACb,wBAAIA,UAAU,SAAd,8BAAiD,6BAAjD,oCACA,yBAAKA,UAAU,QACb,6BAAK,qCACL,6BAAK,qCACL,6BAAK,qCACL,6BAAK,qCACL,6BAAK,sCAEP,yBAAKA,UAAU,UACZiC,KAAKpB,WAAWqB,KAAI,SAAAN,GAAG,OAAIA,OAGlC,yBAAK5B,UAAU,eAAf,oBAA2CiC,KAAK1B,MAAME,eAAtD,UACA,yBAAKT,UAAU,mBACZiC,KAAK1B,MAAMG,SAASwB,KAAI,SAAAxB,GACvB,OAAO,yBAAKN,IAAKM,EAAUL,IAAI,c,GApFR8B,IAAMC,W,MCEvCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.c66a1f5a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ImageBox = (props) => {\r\n    return(\r\n        <div \r\n        className=\"ImageBox-wrapper\"\r\n        onClick={props.onClick}\r\n        >\r\n            <img data-value={props.value} src={props.src} alt={props.alt || \"\"} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageBox","import React, {Fragment} from 'react';\r\nimport ImageBox from './components/ImageBox'\r\n\r\nexport default class App extends React.Component{\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = { \r\n      startCounter: 15,\r\n      currentCounter: 15,\r\n      selected: []\r\n    }\r\n    this.imgClick = (e) => {\r\n      \r\n    }\r\n    this.makePics = () => {\r\n\r\n      const make = () => {\r\n      const imgCounter = 25\r\n      let i = 0\r\n      let pics = []\r\n      let counter = 0\r\n      let dollarValue = 5\r\n\r\n        for (i; i < imgCounter; i++) {\r\n          pics = [...pics, <ImageBox \r\n            className={this.state.currentCounter < dollarValue ? \"clicked\" : \"\"}\r\n            value={dollarValue} \r\n            src={`img/t-posen${i}.jpg`}\r\n            onClick={e => {\r\n              console.log(e.target.getAttribute(\"data-value\"))\r\n              const value = Number(e.target.getAttribute(\"data-value\"))\r\n              let newState = {...this.state}\r\n              let selected = newState.selected\r\n\r\n              let newCounter = newState.currentCounter\r\n              if(e.target.classList.contains(\"clicked\")){\r\n                newCounter = newCounter + value\r\n                newState.selected = selected.filter(img => img !== e.target.src)\r\n              }\r\n              else{\r\n                if(newCounter - value < 0){\r\n                  alert('youre out of dollars')\r\n                  return\r\n                }\r\n                newCounter = newCounter - value\r\n                newState.selected = [...selected, e.target.src]\r\n              }\r\n              newState.currentCounter = newCounter\r\n              console.log(\"newCounter\")\r\n              console.log(newCounter)\r\n\r\n              e.target.classList.toggle(\"clicked\")\r\n              this.setState(newState)\r\n            }}\r\n            />]\r\n          counter+=1\r\n          if(counter === 5){\r\n            counter = 0\r\n            dollarValue -= 1\r\n          }\r\n        }\r\n        return pics\r\n      }\r\n      return make()\r\n      }\r\n    }\r\n\r\n\r\n  render(){\r\n    return (\r\n      <Fragment>\r\n        <div className=\"PickImg-wrapper\">\r\n          <h3 className=\"title\">You have 15$ to choose what<br/> you want for your physical form</h3>\r\n          <div className=\"cost\">\r\n            <div><span>$5</span></div>\r\n            <div><span>$4</span></div>\r\n            <div><span>$3</span></div>\r\n            <div><span>$2</span></div>\r\n            <div><span>$1</span></div>\r\n          </div>\r\n          <div className=\"images\">\r\n            {this.makePics().map(img => img)}\r\n          </div>\r\n        </div>\r\n      <div className=\"dollar-left\">{`You have $${this.state.currentCounter} left`}</div>\r\n      <div className=\"preview-wrapper\">\r\n        {this.state.selected.map(selected => {\r\n          return <img src={selected} alt=\"\"/>\r\n        })}\r\n      </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\nimport './css/index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}