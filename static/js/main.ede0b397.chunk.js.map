{"version":3,"sources":["components/ImageBox.js","App.js","index.js"],"names":["ImageBox","props","id","className","selected","onClick","data-value","value","src","alt","App","React","useState","remainder","updateRemainder","updateSelected","picData","setPicData","imgClick","options","console","log","price","indexOf","filter","oldId","alert","useEffect","i","pics","counter","dollarValue","generatedPicData","key","e","make","map","img","length","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAceA,EAZE,SAACC,GACd,OACI,yBACAC,GAAID,EAAMC,GACVC,UAAS,2BAAsBF,EAAMG,SAAW,UAAY,IAC5DC,QAASJ,EAAMI,SAEX,yBAAKC,aAAYL,EAAMM,MAAOC,IAAKP,EAAMO,IAAKC,IAAKR,EAAMQ,KAAO,OCkI7DC,EAxIH,WAAO,IAAD,EACEC,IAAMC,SAAS,IADjB,uBAEqBD,IAAMC,SAAS,KAFpC,mBAETC,EAFS,KAEEC,EAFF,OAGmBH,IAAMC,SAAS,IAHlC,mBAGTR,EAHS,KAGCW,EAHD,OAIcJ,IAAMC,SAAS,MAJ7B,mBAITI,EAJS,KAIAC,EAJA,KAORC,EAAW,SAAChB,EAAIiB,GACpBC,QAAQC,IAAI,sBACZD,QAAQC,IAAInB,GAEZkB,QAAQC,IAAI,YACZD,QAAQC,IAAIjB,GACZ,IAAMkB,EAAQN,EAAQd,GAAIoB,MAC1B,GAAGlB,EAASmB,QAAQrB,IAAO,EAGzB,OAFAa,EAAeX,EAASoB,QAAO,SAAAC,GAAK,OAAIA,IAAUvB,WAClDY,EAAgBD,EAAYS,GAIzBT,EAAYS,EAAQ,EACrBI,MAAM,yBAGRZ,EAAgBD,EAAYS,GAC5BP,EAAe,GAAD,mBAAKX,GAAL,CAAeF,OAwEjC,OAHAS,IAAMgB,WAAU,eAId,kBAAC,WAAD,KACE,yBAAKxB,UAAU,eACf,wBAAIA,UAAU,SAAd,+DACA,8BACE,6BAASA,UAAU,mBACjB,yBAAKA,UAAU,QACb,6BAAK,qCACL,6BAAK,qCACL,6BAAK,qCACL,6BAAK,qCACL,6BAAK,sCAEP,yBAAKA,UAAU,UA9ER,WASX,IARF,IACIyB,EAAI,EACJC,EAAO,GACPC,EAAU,EACVC,EAAc,EAEdC,EAAmB,GAPJ,aAUf,IAAM9B,EAAE,iBAAa0B,GACrBC,EAAI,sBAAOA,GAAP,CAAa,kBAAC,EAAD,CACfI,IAAG,mBAAcL,GACjB1B,GAAIA,EACJE,SAAUA,EAASmB,QAAQrB,IAAO,EAClCM,IAAG,qBAAgBoB,EAAhB,QACHvB,QAAS,SAAC6B,GACRhB,EAAShB,QAGb8B,EAAgB,2BAAOA,GAAP,mCAAoCJ,GAAM,CAACN,MAAOS,EAAa3B,UAAU,EAAOI,IAAI,cAAD,OAAgBoB,EAAhB,WAEpF,KADfE,GAAS,KAEPA,EAAU,EACVC,GAAe,IAfXH,EARO,GAQOA,IAAM,IAqB5B,OAHIZ,GACFC,EAAWe,GAENH,EAEFM,GA+CaC,KAAI,SAAAC,GAAG,OAAIA,OAG3B,6BAASlC,UAAU,oBACjB,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,eAAf,YAAsC,8BAAOU,EAAP,MAAtC,UAGF,yBAAKV,UAAU,mBA9ClBC,EAASkC,OAAS,EACZlC,EAASgC,KAAI,SAAAlC,GAQlB,OAAO,kBAAC,EAAD,CACP+B,IAAG,4BAAuB/B,GAC1BM,IAAKQ,EAAQd,GAAIM,IACjBH,QAAS,WACPa,EAAShB,SAKH,MAgCR,yBAAKC,UAAU,0BACb,4BACEA,UAAS,gCAA2BC,EAASkC,QAAU,EAAI,WAAa,IACxEjC,QAAS,WA1DjBS,EAAgB,IAChBC,EAAe,KA0DPwB,SAAUnC,EAASkC,QAAU,GAH/B,kC,MC1HZE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.ede0b397.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ImageBox = (props) => {\r\n    return(\r\n        <div \r\n        id={props.id}\r\n        className={`ImageBox-wrapper ${props.selected ? \"clicked\" : \"\"}`}\r\n        onClick={props.onClick}\r\n        >\r\n            <img data-value={props.value} src={props.src} alt={props.alt || \"\"} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageBox","import React, {Fragment} from 'react';\r\nimport ImageBox from './components/ImageBox'\r\n\r\nconst App = () => {\r\n    const [total] = React.useState(15)\r\n    let [remainder, updateRemainder] = React.useState(15)\r\n    let [selected, updateSelected] = React.useState([])\r\n    let [picData, setPicData] = React.useState(null)\r\n\r\n    \r\n    const imgClick = (id, options) => {\r\n      console.log(\"_______ID_________\")\r\n      console.log(id)\r\n      // console.log(e.target.getAttribute(\"data-value\"))\r\n      console.log(\"SELECTED\")\r\n      console.log(selected)\r\n      const price = picData[id].price\r\n      if(selected.indexOf(id) >= 0){\r\n        updateSelected(selected.filter(oldId => oldId !== id))\r\n        updateRemainder(remainder + price)\r\n        return\r\n      }\r\n      else{\r\n        if(remainder - price < 0){\r\n          alert('youre out of dollars')\r\n          return\r\n        }\r\n        updateRemainder(remainder - price)\r\n        updateSelected([...selected, id])\r\n      }\r\n      return\r\n    }\r\n\r\n    const makePics = () => {\r\n\r\n      const make = () => {\r\n      const imgCount = 25\r\n      let i = 0\r\n      let pics = []\r\n      let counter = 0\r\n      let dollarValue = 5\r\n\r\n      let generatedPicData = {}\r\n\r\n        for (i; i < imgCount; i++) {\r\n          const id = `picker-${i}`\r\n          pics = [...pics, <ImageBox \r\n            key={`imageBox-${i}`}\r\n            id={id}\r\n            selected={selected.indexOf(id) >= 0}\r\n            src={`img/t-posen${i}.jpg`}\r\n            onClick={(e) => { \r\n              imgClick(id)} \r\n            }\r\n            />]\r\n          generatedPicData = {...generatedPicData, [`picker-${i}`]: {price: dollarValue, selected: false, src: `img/t-posen${i}.jpg`}}\r\n          counter+=1\r\n          if(counter === 5){\r\n            counter = 0\r\n            dollarValue -= 1\r\n          }\r\n        }\r\n        if(!picData){\r\n          setPicData(generatedPicData)\r\n        }\r\n        return pics\r\n      }\r\n      return make()\r\n    }\r\n\r\n    const clearAll = () => {\r\n      updateRemainder(15)\r\n      updateSelected([])\r\n    }\r\n\r\n    const renderSelected = () => {\r\n      if(selected.length > 0){\r\n        return selected.map(id => {\r\n          // return <img \r\n          // key={`selected-${id}`}\r\n          // src={picData[id].src} \r\n          // onClick={() => {\r\n          //   imgClick(id)}}\r\n          // alt={`${selected}`}\r\n          // />\r\n          return <ImageBox \r\n          key={`imageBox-selected-${id}`}\r\n          src={picData[id].src}\r\n          onClick={() => { \r\n            imgClick(id)} \r\n          }\r\n          />\r\n      })\r\n    }\r\n      else return null\r\n    }\r\n\r\n    React.useEffect(() => {\r\n    })\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"app-wrapper\">\r\n        <h3 className=\"title\">You have 15$ to choose what you want for your physical form</h3>\r\n        <main>\r\n          <section className=\"PickImg-wrapper\">\r\n            <div className=\"cost\">\r\n              <div><span>$5</span></div>\r\n              <div><span>$4</span></div>\r\n              <div><span>$3</span></div>\r\n              <div><span>$2</span></div>\r\n              <div><span>$1</span></div>\r\n            </div>\r\n            <div className=\"images\">\r\n              {makePics().map(img => img)}\r\n            </div>\r\n          </section>\r\n          <section className=\"selected-wrapper\">\r\n            <div className=\"selected-info\">\r\n              <div className=\"dollar-left\">You have <span>{remainder} $</span> left</div>\r\n\r\n            </div>\r\n            <div className=\"preview-wrapper\">\r\n              {renderSelected()}\r\n            </div>\r\n\r\n          <div className=\"selected-buttonWrapper\">\r\n            <button \r\n              className={`selected-button_clear ${selected.length <= 0 ? \"disabled\" : \"\"}`}\r\n              onClick={() => {clearAll()}}\r\n              disabled={selected.length <= 0 ? true : false}\r\n              >Reset üóëÔ∏è</button>\r\n          </div>\r\n          </section>\r\n        </main>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\nimport './css/index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}